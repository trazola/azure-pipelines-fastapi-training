trigger:
  branches:
    include:
      - 'master'
      - 'main'


variables:
  helmArtifactName: 'helm'


stages:
  - template: templates/testing-strategy-stages.yaml

  - stage: Prepare
    jobs:
      - job: PrepareHelmChart
        steps:
          - task: CopyFiles@2
            inputs:
              sourceFolder: '.'
              contents: |
                chart/templates/**
                chart/values/**
                chart/Chart.yaml
              targetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: '$(helmArtifactName)'

  - stage: BuildImages
    condition: |
      and(
        succeeded(),
        in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/master', 'refs/heads/develop')
      )
    dependsOn: [TestingStrategy, Prepare]
    jobs:
      - template: templates/build-docker-image-jobs.yaml
        parameters:
          jobName: BuildBaseImage
          dockerHubCR: TRAZOLA-DOCKER
          dockerHubRepo: trazola/generic_images
          dockerImageTag: python3.11-slim-bullseye
          dockerfilePath: dockerfiles/base.Dockerfile

      - template: templates/build-docker-image-jobs.yaml
        parameters:
          jobName: BuildAppImage
          dockerHubCR: TRAZOLA-DOCKER
          dockerHubRepo: trazola/books
          dockerfilePath: dockerfiles/Dockerfile
          jobDependsOn: BuildBaseImage

  - template: templates/deployment-stages.yaml
    parameters:
      env: 'STAGING'
      azureDevOpsEnv: 'STAGING'
      helmArtifactName: '$(helmArtifactName)'
      kubernetesServiceConnection: 'LINODE-K8S'
      helmValuesFile: 'staging.yaml'
      stageDependsOn: ['BuildImages']
      chartName: 'books'
      kubernetesNamespace: non-prod

