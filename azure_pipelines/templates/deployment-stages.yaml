parameters:
  - name: env
    type: string

  - name: azureDevOpsEnv
    type: string

  - name: helmArtifactName
    type: string

  - name: kubernetesServiceConnection
    type: string

  - name: helmValuesFile
    type: string

  - name: chartName
    type: string

  - name: buildDockerStageName
    type: string
    default: "BuildImages"

  - name: buildDockerJobName
    type: string
    default: "BuildAppImage"

  - name: stageCondition
    type: string
    default: |
      and(
        succeeded(),
        in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/master', 'refs/heads/develop')
      )

  - name: stageDependsOn
    type: object
    default: []

  - name: kubernetesNamespace
    type: 'string'


stages:
  - stage: ${{ parameters.env }}
    condition: ${{ parameters.stageCondition }}
    dependsOn: ${{ parameters.stageDependsOn }}
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      chartPath: '${{ parameters.helmArtifactName }}/chart'
      fullImageNameAndTag: $[ stageDependencies.${{ parameters.buildDockerStageName }}.${{ parameters.buildDockerJobName }}.outputs['setFullImageNameAndTag.fullImageNameAndTag'] ]
    jobs:
      - deployment: Linode
        environment: ${{ parameters.azureDevOpsEnv }}
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none

                - task: DownloadPipelineArtifact@2
                  displayName: Download Helm artifact
                  inputs:
                    patterns: ${{ parameters.helmArtifactName }}/**

                - task: qetza.replacetokens.replacetokens-task.replacetokens@3
                  displayName: Replace values in files
                  inputs:
                    rootDirectory: $(Pipeline.Workspace)
                    targetFiles: |
                      $(chartPath)/values/${{ parameters.helmValuesFile }}
                    encoding: auto
                    writeBOM: true
                    actionOnMissing: fail
                    keepToken: false
                    tokenPrefix: '#{'
                    tokenSuffix: '}#'
                    useLegacyPattern: false
                    enableTelemetry: true

                - task: HelmDeploy@0
                  inputs:
                    connectionType: 'Kubernetes Service Connection'
                    kubernetesServiceConnection: ${{ parameters.kubernetesServiceConnection }}
                    command: 'upgrade'
                    chartType: 'FilePath'
                    chartName: ${{ parameters.chartName }}
                    chartPath: '$(Pipeline.Workspace)/$(chartPath)'
                    valueFile: '$(Pipeline.Workspace)/$(chartPath)/values/${{ parameters.helmValuesFile }}'
                    install: true
                    arguments: '--wait'
                    releaseName: ${{ parameters.chartName }}-${{ lower(parameters.env) }}

            on:
              success:
                steps:
                  - task: HelmInstaller@1
                    displayName: Helm installer
                    inputs:
                      helmVersionToInstall: latest

                  - script: |
                      helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
                    displayName: 'Add Helm repo'

                  - script: |
                      helm repo update
                    displayName: 'Update Helm repo'

                  - task: HelmDeploy@0
                    inputs:
                      connectionType: 'Kubernetes Service Connection'
                      kubernetesServiceConnection: ${{ parameters.kubernetesServiceConnection }}
                      command: 'upgrade'
                      chartType: 'Name'
                      chartName: 'ingress-nginx/ingress-nginx'
                      releaseName: 'ingress-nginx-${{ lower(parameters.env) }}'
                      namespace: ${{ parameters.kubernetesNamespace }}
                      install: true
                      arguments: '--wait'
