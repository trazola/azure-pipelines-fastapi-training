trigger:
  branches:
    include:
      - 'master'
      - 'main'


variables:
  helmArtifactName: 'helm'


stages:
  - template: template/testing-strategy.yaml

  - stage: Prepare
    jobs:
      - job: HelmChart
        steps:
          - task: CopyFiles@2
            inputs:
              sourceFolder: "."
              contents: |
                chart/templates/**
                chart/values/**
                chart/Chart.yaml
              targetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(helmArtifactName)'

  - stage: 'BuildImages'
    condition: |
      and(
        succeeded(),
        in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main')
      )
    dependsOn: ['TestingStrategy', 'Prepare']
    jobs:
      - template: template/build-docker-image.yaml
        parameters:
          jobName: 'BuildBaseImage'
          dockerContainerRegistry: 'ing-training'
          dockerRepository: 'trazola/generic_images'
          dockerPath: 'dockerfiles/base.Dockerfile'
          dockerTag: 'python3.11-slim-bullseye'

      - template: template/build-docker-image.yaml
        parameters:
          jobName: 'BuildAppImage'
          dockerContainerRegistry: 'ing-training'
          dockerRepository: 'trazola/books'
          dockerPath: 'dockerfiles/Dockerfile'
          jobDependsOn: ['BuildBaseImage']

  - template: template/deployment.yaml
    parameters:
      env: 'STAGING'
      azureDevOpsEnv: 'STAGING-ENV'
      stageDependsOn: ['BuildImages']
      helmArtifactName: '$(helmArtifactName)'
      helmValuesFile: 'staging.yaml'
      kubernetesServiceConnection: 'books-k8s-cluster'
      kubernetesNamespace: 'non-prod'
      helmChartName: 'books'
